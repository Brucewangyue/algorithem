package basic;

/**
 * 有一个数字游戏叫做2048，此游戏的规则为，两个相同的数字能进行相加。例如:两个2可以相加，则相加后4的个数加一，2的个数会减二。
 * 现在有一串数字，为目前已知的数字的数量。问至少还需要几次相加，才能获得2048 (题目保证能够相加得到2048)。
 * 输入描述:
 * 第一行为样例数T，代表后面会跟随工组测试数据。
 * 每组测试数据输入10个数，分别代表
 * 2,4,8,16,32,64,128,256,512,1024的个数。
 * 每种数字的个数不超过1024。
 * 输出描述:
 * 对于每组数据， 输出一个数， 表示需要得到2048最少需要相加的次数。
 * 输入
 * 2
 * 2 1 1 1 1 1 1 1 1 1
 * 1 1 1 1 1 1 1 1 1 2
 * <p>
 * 输出
 * 10
 * 1
 */
public class LeastAddTime2048 {
    public static void main(String[] args) {
        int[] arr = {1, 1, 1, 1, 1, 1, 1, 2, 1, 1};
        System.out.println(getLeastAddTime(arr));
    }

    static int getLeastAddTime(int[] arr) {
        int res = 0;
        // 最后一位是2就返回
        while (arr[9] < 2) {
            // 每次倒着找最近的个数是2的位置，这样才能最少次数相加
            for (int i = 8; i >= 0; i--) {
                if (arr[i] >= 2) { // 找到最近的2，本轮次数加1，然后按题目下一位的个数加1
                    arr[i]--;
                    arr[i + 1]++;
                    res++;
                    break;
                }
            }
        }

        // 最后一位的个数是2，再最后加一次
        return ++res;
    }
}
